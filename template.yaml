AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Miro Banner Accepters

Resources:

  # DynamoDB Table
  MiroBannerAccepters:
    Type: 'AWS::Serverless::SimpleTable'
    Properties:
      PrimaryKey:
        Name: id
        Type: Number

  # HTTP API
  MiroBannerAPI:
    Type: AWS::Serverless::HttpApi
    Properties:
      # CORS configuration - this is open for development only and should be restricted in prod.
      # See https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-httpapicorsconfiguration.html   
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - DELETE
          - OPTIONS
        AllowHeaders:
          - "*"   
        AllowOrigins: 
          - "*"      

  ## Lambda functions
  MiroBannerFunction:
  Type: 'AWS::Serverless::Function'
  Properties:
    CodeUri: lambdaApp/
    Handler: app.handler
    Runtime: nodejs16.x
    Timeout: 10
    Environment:
      Variables:
        TABLE_NAME: !Ref MiroBannerAccepters
    Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            Path: /update
            Method: post
            RestApiId:
              Ref: !Ref MiroBannerAPI

  MiroBannerAcceptersRequestFunction:
    # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: getSignedURL/
      Handler: app.handler
      Runtime: nodejs16.x
      Timeout: 3
      MemorySize: 128
      Environment:
        Variables:
          MiroBannerAccepters: !Ref S3MiroBannerAccepters
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: dynamodb:PutItem
              Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MiroBannerAPI}"

## Take a note of the outputs for deploying the workflow templates in this sample application
Outputs:
  ApiURL:
    Description: 'API Gateway endpoint URL'
    Value: !Sub 'https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/update'
